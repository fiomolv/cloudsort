<?xml version="1.0" encoding="UTF-8"?>
  <!--
    - DispatcherServlet application context for virtutel's web tier.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jaxws="http://cxf.apache.org/jaxws"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

  <!--
    - The controllers are autodetected POJOs labeled with the @Controller annotation.
  -->
  <context:component-scan base-package="com.satera.cloudsort.web" />

  <!--
    - The form-based controllers within this application provide
    @RequestMapping - annotations at the type level for path mapping URLs
    and @RequestMapping - at the method level for request type mappings
    (e.g., GET and POST). - In contrast, VirtutelController - which is not
    form-based - provides - @RequestMapping only at the method level for
    path mapping URLs. - - DefaultAnnotationHandlerMapping is driven by
    these annotations and is - enabled by default with Java 5+.
  -->

  <!--
    - This bean processes annotated handler methods, applying
    virtutel-specific PropertyEditors - for request parameter binding. It
    overrides the default AnnotationMethodHandlerAdapter.
  -->
  <!-- bean
    class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="webBindingInitializer">
      <bean class="com.satera.cloudsort.web.VirtutelBindingInitializer" />
    </property>
  </bean-->

  <!--
    - This bean resolves specific types of exceptions to corresponding
    logical - view names for error views. The default behaviour of
    DispatcherServlet - is to propagate all exceptions to the servlet
    container: this will happen - here with all other types of exceptions.
  -->
  <bean
    class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
        <prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
      </props>
    </property>
  </bean>

  <!--
    - This bean configures the 'prefix' and 'suffix' properties of -
    InternalResourceViewResolver, which resolves logical view names -
    returned by Controllers. For example, a logical view name of "vets" -
    will be mapped to "/WEB-INF/jsp/vets.jsp".
  -->
  <bean
    class="org.springframework.web.servlet.view.InternalResourceViewResolver"
    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

  <!--
    - Message source for this context, loaded from localized "messages_xx"
    files. - Could also reside in the root application context, as it is
    generic, - but is currently just used within virtutel's web tier.
  -->
  <bean id="messageSource"
    class="org.springframework.context.support.ResourceBundleMessageSource"
    p:basename="messages" />


  <!-- jaxws:endpoint id="enterprise"
    implementor="com.satera.cloudsort.ws.EnterpriseImpl" address="/Enterprise/Usage" />
  <jaxws:endpoint id="usage" implementor="com.satera.cloudsort.ws.UsageImpl"
    address="/ENTERPRISE" /-->



</beans>